{"version":3,"file":"static/js/805.cbe3e75a.chunk.js","mappings":"qLAGA,MAAMA,EAAWC,IAAA,IAAC,MAChBC,EAAK,KAAEC,EAAI,MAAEC,EAAK,OAAEC,GACrBJ,EAAA,OACCK,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAKF,SAAEL,KACjBM,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,GAAOK,EAAAA,EAAAA,KAAA,KAAGE,KAAMP,EAAKI,SAAEF,EAAOD,KAAcC,EAAOD,OACrD,EAcPJ,EAASW,aAAe,CACtBN,OAASO,GAAMA,EACfT,KAAM,KACNC,MAAO,MAGT,UCKA,EA7BcH,IAAA,IAAC,KAAEY,GAAMZ,EAAA,OACrBO,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACGM,EAAKC,KAAKC,IACTP,EAAAA,EAAAA,KAACR,EAAQ,CACPK,OAAQU,EAAKV,OAEbH,MAAOa,EAAKb,MACZC,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,OAHPW,EAAKb,YAOV,EChBJc,EAAMA,KACV,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,YActB,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAPfC,MACX,MACMC,EAAY,IAAIC,KAAK,uBAC3BP,IAASO,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,IAAI,EAIxBJ,IAAQ,IACxC,MAAO,KACLK,cAAcP,EAAM,CACrB,GACA,KACIb,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAtB,SAAGU,GAAO,EAGba,EAAWA,KACf,MAAOC,EAAUC,IAAeb,EAAAA,EAAAA,YAchC,OANAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAPfC,MACX,MACMC,EAAY,IAAIC,KAAK,uBAC3BO,IAAcP,KAAKC,MAAQF,GAFX,oBAEiCG,QAAQ,IAAI,EAI7BJ,IAAQ,IACxC,MAAO,KACLK,cAAcP,EAAM,CACrB,GACA,KACIf,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,CAAGwB,EAAU,WAAY,EA4BlC,EAzBa,CACX,CACEE,IAAK,MACL/B,MAAO,cACPE,OAAOI,EAAAA,EAAAA,KAACQ,EAAG,KASb,CACEiB,IAAK,WACL/B,MAAO,eACPE,MAAO,uBAET,CACE6B,IAAK,WACL/B,MAAO,+BACPE,OAAOI,EAAAA,EAAAA,KAACsB,EAAQ,MChDpB,EAPsBI,KACpB5B,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAC2B,EAAK,CAACtB,KAAMA,OC8BjB,EAhCcuB,OCoBd,EAjBcA,KACZ5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,CACHC,MAAM,QACNC,YAAY,kCAAiChC,UAE7CD,EAAAA,EAAAA,MAAA,WAASkC,UAAU,OAAOC,GAAG,QAAOlC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,QAAOjC,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACkC,EAAAA,GAAI,CAACC,GAAG,SAAQpC,SAAC,iBAG1BC,EAAAA,EAAAA,KAACoC,EAAQ,KACTpC,EAAAA,EAAAA,KAACqC,EAAI,Q","sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","components/Stats/Site.js","pages/Stats.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({\n  label, link, value, format,\n}) => (\n  <tr>\n    <td width=\"70%\">{label}</td>\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\n  </tr>\n);\n\nTableRow.propTypes = {\n  format: PropTypes.func,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n};\n\nTableRow.defaultProps = {\n  format: (x) => x,\n  link: null,\n  value: null,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from './TableRow';\n\nconst Table = ({ data }) => (\n  <table>\n    <tbody>\n      {data.map((pair) => (\n        <TableRow\n          format={pair.format}\n          key={pair.label}\n          label={pair.label}\n          link={pair.link}\n          value={pair.value}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    format: PropTypes.func,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  })).isRequired,\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\n\nconst Age = () => {\n  const [age, setAge] = useState();\n\n  const tick = () => {\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n    const birthTime = new Date('2001-01-06T05:31:35');\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => tick(), 25);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return <>{age}</>;\n};\n\nconst Practice = () => {\n  const [practice, setPractice] = useState();\n\n  const tick = () => {\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n    const birthTime = new Date('2019-09-01T00:00:00');\n    setPractice(((Date.now() - birthTime) / divisor).toFixed(11));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => tick(), 25);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return <>{practice}{' years'}</>;\n};\n\nconst data = [\n  {\n    key: 'age',\n    label: 'Current age',\n    value: <Age />,\n  },\n  // {\n  //   key: 'countries',\n  //   label: 'Countries visited',\n  //   value: 4,\n  //   link:\n  //     'https://www.google.com/maps/d/embed?mid=1iBBTscqateQ93pWFVfHCUZXoDu8&z=2',\n  // },\n  {\n    key: 'location',\n    label: 'Current city',\n    value: 'Toronto, ON, Canada',\n  },\n  {\n    key: 'practice',\n    label: 'Practice in Computer Science',\n    value: <Practice />,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport Table from './Table';\nimport data from '../../data/stats/personal';\n\nconst PersonalStats = () => (\n  <>\n    <h3>Some stats about me</h3>\n    <Table data={data} />\n  </>\n);\n\nexport default PersonalStats;\n","// import React, { useState, useCallback, useEffect } from 'react';\n\n// import Table from './Table';\n// import initialData from '../../data/stats/site';\n\nconst Stats = () => {\n  // const [data, setResponseData] = useState(initialData);\n  // // TODO think about persisting this somewhere\n  // const fetchData = useCallback(async () => {\n  //   // request must be authenticated if private\n  //   const res = await fetch(\n  //     'https://api.github.com/repos/lorenz-liu/lorenz-liu.github.io',\n  //   );\n  //   const resData = await res.json();\n  //   setResponseData(\n  //     initialData.map((field) => ({\n  //       ...field,\n  //       // update value if value was returned by call to github\n  //       value: Object.keys(resData).includes(field.key)\n  //         ? resData[field.key]\n  //         : field.value,\n  //     })),\n  //   );\n  // }, []);\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, [fetchData]);\n\n  // return (\n  //   <div>\n  //     <h3>Some stats about this site</h3>\n  //     <Table data={data} />\n  //   </div>\n  // );\n};\n\nexport default Stats;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Personal from '../components/Stats/Personal';\nimport Site from '../components/Stats/Site';\n\nconst Stats = () => (\n  <Main\n    title=\"Stats\"\n    description=\"Some statistics about Zhaoxun. \"\n  >\n    <article className=\"post\" id=\"stats\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/stats\">Stats</Link></h2>\n        </div>\n      </header>\n      <Personal />\n      <Site />\n    </article>\n  </Main>\n);\n\nexport default Stats;\n"],"names":["TableRow","_ref","label","link","value","format","_jsxs","children","_jsx","width","href","defaultProps","x","data","map","pair","Age","age","setAge","useState","useEffect","timer","setInterval","tick","birthTime","Date","now","toFixed","clearInterval","_Fragment","Practice","practice","setPractice","key","PersonalStats","Table","Stats","Main","title","description","className","id","Link","to","Personal","Site"],"sourceRoot":""}